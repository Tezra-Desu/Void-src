# Template file for 'mullvad-vpn-cli'
pkgname=mullvad-vpn-cli
version=2022.5
revision=6
build_helper="rust"
archs="x86_64"
build_wrksrc="mvpn"
hostmakedepends="cargo git rsync go pkg-config protobuf28 libprotoc28"
makedepends="dbus-devel libnftnl-devel libprotoc28-devel protobuf28-devel"
depends="dbus-elogind dbus-elogind-libs iputils libnftnl"
short_desc="The Mullvad VPN CLI client"
maintainer="TezraDesu"
license="GPL-3.0-or-later"
homepage="https://mullvad.net/"
distfiles="https://github.com/Tezra-Desu/Blank-Repo/archive/refs/tags/v1.tar.gz"
checksum=08e3d4d73fc155c7e4261f5a3c560f62d3fc586667a953b32d54cd6ed2616efb

post_extract() {
  rm -f README.md
  git clone "https://github.com/mullvad/mullvadvpn-app.git" 
  cp -a mullvadvpn-app/ mvpn/
  rm -rf mullvpn-app/
}

pre_build() {
  git clone "https://github.com/mullvad/mullvadvpn-app-binaries.git"
  git submodule init
  git config submodule.dist-assets/binaries.url "mullvadvpn-app-binaries/"
  git -c protocol.file.allow=always submodule update

  export RUSTUP_TOOLCHAIN=stable
  cargo clean

  cargo fetch --locked --target "${archs}-unknown-linux-gnu"

  pushd wireguard/libwg
  export GOPATH="${wrksrc}/mpvn/gopath"
  mkdir -p "../../build/lib/${archs}-unknown-linux-gnu"
  go mod download -x
  popd
}

do_build() {
  local RUSTC_VERSION=$(rustc --version)


  pushd wireguard/libwg
  export GOPATH="${wrksrc}/mvpn/gopath"
  export CGO_CPPFLAGS="${CPPFLAGS}"
  export CGO_CFLAGS="${CFLAGS}"
  export CGO_CXXFLAGS="${CXXFLAGS}"
  export CGO_LDFLAGS="${LDFLAGS}"
  export GOFLAGS="-buildmode=pie -trimpath -ldflags=-linkmode=external -mod=readonly -modcacherw"
  go build -v -o "../../build/lib/${archs}-unknown-linux-gnu"/libwg.a -buildmode c-archive
  popd

  # Clean module cache for makepkg -C
  go clean -modcache

  export RUSTUP_TOOLCHAIN=stable
  export CARGO_TARGET_DIR=target
  cargo build --frozen --release

  mkdir -p dist-assets/shell-completions
  for sh in bash zsh fish; do
    cargo run --bin mullvad --frozen --release -- shell-completions ${sh} \
      dist-assets/shell-completions/
  done

  cargo run --bin relay_list --frozen --release > dist-assets/relays.json
}

do_install() {

  # Install binaries
  install -Dm755 target/release/mullvad{-problem-report,-setup} -t \
    "${DESTDIR}/opt/Mullvad VPN/resources/"

  install -Dm755 target/release/{mullvad,mullvad{-daemon,-exclude}} -t \
    "${DESTDIR}/usr/bin/"

  chmod u+s "${DESTDIR}/usr/bin/mullvad-exclude"

  install -m644 target/release/libtalpid_openvpn_plugin.so -t \
    "${DESTDIR}/opt/Mullvad VPN/resources/"

  install -m755 "dist-assets/binaries/${archs}-unknown-linux-gnu/openvpn" -t \
    "${DESTDIR}/opt/Mullvad VPN/resources/"

  # Install relay list
  install -m644 dist-assets/relays.json -t "${DESTDIR}/opt/Mullvad VPN/resources/"

  # Install OpenVPN certificate
  install -m644 dist-assets/ca.crt -t "${DESTDIR}/opt/Mullvad VPN/resources/"
  
  mkdir -p "${DESTDIR}/etc/sv/mullvad"
  echo "#!/bin/sh" > "${DESTDIR}/etc/sv/mullvad/run"
  echo "sv check dbus >/dev/null || exit 1" >> "${DESTDIR}/etc/sv/mullvad/run"
  echo "exec /opt/Mullvad\ VPN/resources/mullvad-daemon -v --disable-stdout-timestamps \
  > /dev/null 2>&1" >> "${DESTDIR}/etc/sv/mullvad/run"
  chmod +x "${DESTDIR}/etc/sv/mullvad/run"

   

  # Install completions
  install -Dm644 dist-assets/shell-completions/mullvad.bash \
    "${DESTDIR}/usr/share/bash-completion/completions/mullvad"
  install -Dm644 dist-assets/shell-completions/_mullvad -t \
    "${DESTDIR}/usr/share/zsh/site-functions/"
  install -Dm644 dist-assets/shell-completions/mullvad.fish -t \
    "${DESTDIR}/usr/share/fish/vendor_completions.d/"
}
